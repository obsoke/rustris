# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=rustris

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    # - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    # - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=armv7-unknown-linux-gnueabihf
    # - env: TARGET=mips-unknown-linux-gnu
    # - env: TARGET=mips64-unknown-linux-gnuabi64
    # - env: TARGET=mips64el-unknown-linux-gnuabi64
    # - env: TARGET=mipsel-unknown-linux-gnu
    # - env: TARGET=powerpc-unknown-linux-gnu
    # - env: TARGET=powerpc64-unknown-linux-gnu
    # - env: TARGET=powerpc64le-unknown-linux-gnu
    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "OObqaBUgSUPXtc8PcxqSMDt6IdgCWOmnTe3Vh4MYgI3A+EAD5FhxLfqJLeewPJxE0VM9VlZ9DyG119N2O5OM13DPFemXXuTZYlwv6S9HbiNDQkN5mZ8O4b31+USI+lHHORcivANR8Vs9buehHhg5HU3DszLEletbCOYn7HMnWM/Ev2PDEu9syjlS7qyaQtoG2PlxwBLdii5r0Hc6aGrxxI1I0bJpQ0QwbTtQsDfNZga4z4GYSr5oQSGmq8YDZgItAGJgZgHx8RcDyv6zpZYDZLz0Z/HGDgP/JrlwCw1Mcr/um2/IQLnEQjQlwGUjRfhWIFb8e5lgbSIRfBH7iA8XCef1a1yO9p7qwdWdZn/o/c/YcZDdGOOH2a9AjfEtXRyb7E8Kwqtut0AQ0ZLFvXZVPgv7+R4I4kVYAnjc1SIEknbMpZSIzjoVfjbLis5DUfgow2bNS8Wb0D0DB3cfzyXAKrQeUeHuikohjdBgbIoKRe0yvg+kIAtD1HhPpYLmd4wp1INXZWMqOtkZaTM3rOT7fSWB/7sczx79kgVSfwEIaJaczeiU0pVoRu0Ohs1p2DO5pbpoOKyuP789yi6tcZE4unqinnartvF0xvLzezC5SDcjeC6EYivy50Fs6PIC3fgx3cFcI/KJZG9lOKjk7YvoUBN/zoIED2XFt69rCjs6ZZo="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
